class LinkedListElement {
    value: int;
    previous: LinkedListElement;
    next: LinkedListElement;
    ctor(value: int, previous: LinkedListElement) {
        this.value = value;
        this.previous = previous;
        this.next = null;
    }
    fn setNext(next: LinkedListElement) {
        this.next = next;
    }
}
class LinkedList {
    head: LinkedListElement;
    tail: LinkedListElement;
    ctor() {
        this.head = null;
        this.tail = null;
    }
    fn addElement(value: int) {
        let newElement = new LinkedListElement(value, this.tail);
        if(this.head == null) {
            this.head = newElement;
        }
        if(this.tail != null) {
            this.tail.setNext(newElement);
        }
        this.tail = newElement;
    }
    fn sum(): int {
        let currentElm = this.head;
        if(currentElm == null) {
            return 0;
        }
        let sum = 0;
        while(currentElm.next != null) {
            sum += currentElm.value;
            currentElm = currentElm.next;
        }
        sum += currentElm.value;
        return sum;
    }
    fn iterator(): LinkedListIterator {
        return new LinkedListIterator(this);
    }
}
class LinkedListIterator {
    currentElm: LinkedListElement;
    list: LinkedList;
    ctor(list: LinkedList) {
        this.list = list;
        this.currentElm = this.list.head;
    }
    fn next(): LinkedListElement {
        let ret = this.currentElm;
        if(this.currentElm != null) {
            this.currentElm = this.currentElm.next;
        }
        return ret;
    }
    fn sum(): int {
        let result = 0;
        while(this.hasNext()) {
            result += this.next().value;
        }
        return result + 1;
    }
    fn hasNext(): bool {
        return this.currentElm != null;
    }
}
fn main(): int {
    let list = new LinkedList();
    list.addElement(1);
    list.addElement(2);
    list.addElement(3);
    list.addElement(4);
    let iterator = list.iterator();
    let sum = 0;
    while(iterator.hasNext()) {
        sum += iterator.next().value;
    }
    return sum;
}