static number: int = 5;

class AtomicInteger {
    value: int;
    ctor(value: int) {
        this.value = value;
        return;
    }
    fn getValue(): int {
        return this.value;
    }
    fn incrementValue(): int {
        this.value += 1;
        return this.value;
    }
    fn setValue(value: int): int {
        this.value = value;
        return value;
    }
}
interface Interface {
    fn getValue(): int;
}
class Class1 implements Interface {
    ctor() {}
    override fn getValue(): int {
        return 5;
    }
}
fn add(a: int, b: int): int {
    return a + b;
}
